#include <iostream>
#include<bits/stdc++.h>
using namespace std;
vector<int>adj[100001];
bool visited[100001];
int c=0;
void dfs(int s)
{
c++;
int i=0;
visited[s]=1;
for(i=0;i<adj[s].size();i++)
{
if(visited[adj[s][i]]==0)
dfs(adj[s][i]);
}
}
 
int main() 
{
int i=0,t;
int n,edges,x,y;
cin>>t;
while(t--)
{
long long int leader=1;
cin>>n;
cin>>edges;
memset(visited,0,sizeof visited);
for(i=1;i<=n;i++)
adj[i].clear();
int connected=0;
for(i=1;i<=edges;i++)
{
cin>>x>>y;
adj[x].push_back(y);
adj[y].push_back(x);
}
for(i=1;i<=n;i++)
{
if(visited[i]==0)
{
c=0;
dfs(i);
connected++;
leader=(leader*c)%1000000007;
}
}
cout<<connected<<" ";
cout<<leader%1000000007<<endl;
}
	return 0;
} 
